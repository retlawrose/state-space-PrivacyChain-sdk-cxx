// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/PrivacyChain-sdk-c++/blob/master/LICENSE for terms.
#divert <hpp>
#import iab.privacychain.required.Dejsonizable
#import iab.privacychain.Outcome
#import json.Value
namespace iab::privacychain::history::v1 {
  //
  // Overloaded on the return type
  //
  // Usage:
  //
  //   auto des = dejsonize<History>(...stringy_payload...); .............................. maybe not ok(des)
  //   auto truth = exceptional(dejsonize<bool>(...stringy_payload...)); .................. force the exception
  //
  template<required::Dejsonizable RESULT> auto dejsonize(Outcome<json::Value>) -> Outcome<RESULT>;
}
#endiv
#divert <cpp>
#import iab.privacychain.traits.Is_Dejsonizable
namespace iab::privacychain::history::v1 {
  static_assert(traits::Is_Dejsonizable<bool>::value);
  static_assert(required::Dejsonizable<bool>);
}
#endiv
