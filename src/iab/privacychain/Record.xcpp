// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright (c) 2019 Verizon Media, Inc.  See the LICENSE statement nearby.
#divert <fpp>
#import json.Value
#import std.byte
#import std.variant
#import std.vector
namespace iab::privacychain {
  //
  // A record on The Blockchain (ahem) is just a range of bytes.
  // But with a little schema version and interpretation it can be something else.
  //
  // Usage:
  //
  //   auto called = query<std::string>(...arguments...);
  //   if (ok(called)) {
  //      auto payload = value(called);
  //      auto value = decode(payload);
  //      if (...version 1...) { ... do this... }
  //      else if (...version 2...) { ... do this... }
  //      else { ...do something else }
  //   }
  //
  namespace record {
    using Bytes = std::vector<std::byte>;
    using Json = json::Value;
    namespace tcf {
      struct V1 { };
      struct V2 { };
      struct V3 { };
    }
  }
  using Record = std::variant<record::Bytes, record::Json, record::tcf::V1>;
}
#endiv
