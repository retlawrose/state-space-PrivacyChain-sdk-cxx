// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/PrivacyChain-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
namespace tests::unit::chaincode { class Fixture; }
#endiv
#divert <hpp>
struct tests::unit::chaincode::Fixture : public cppunit::test::Fixture {
  auto test_constants() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import iab.privacychain.chaincode.v1
auto tests::unit::chaincode::Fixture::test_constants() -> void {
  using namespace ::iab::privacychain::chaincode::v1;
  CPPUNIT_ASSERT(!DATA.empty());
  CPPUNIT_ASSERT(!TXID.empty());
  CPPUNIT_ASSERT(!COLLECTED.empty());
  CPPUNIT_ASSERT(!DELEET.empty());
}
auto tests::unit::chaincode::Fixture::suite() -> cppunit::Test * {
  using namespace rigging::suite;
  auto series = Stream{"chaincode"};
  series << []{
              auto v1 = Stream{"v1"};
              v1 << call("constants", &Fixture::test_constants)
                 << END;
              return move(v1);
            }()
         << END;
  return finalize(series);
}
#endiv
