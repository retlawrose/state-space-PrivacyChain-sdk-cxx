// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright (c) 2019 Verizon Media, Inc.  See the LICENSE statement nearby.
#divert <fpp>
namespace tests::unit::chaincode { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::chaincode::Fixture : public cppunit::test::Fixture {
public:
  auto test_constants() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import iab.privacychain.chaincode.v1
auto tests::unit::chaincode::Fixture::test_constants() -> void {
  using namespace ::iab::privacychain::chaincode::v1;
  CPPUNIT_ASSERT(!DATA.empty());
  CPPUNIT_ASSERT(!TXID.empty());
  CPPUNIT_ASSERT(!COLLECTED.empty());
  CPPUNIT_ASSERT(!DELEET.empty());
}
#import unit.rigging.suite.Stream
#import unit.rigging.suite.call
#import unit.rigging.suite.add
auto tests::unit::chaincode::Fixture::suite() -> cppunit::Test * {
  using namespace ::unit::rigging::suite;
  Stream series("chaincode");
  {
    Stream v1("v1");
    v1 << call("constants", &Fixture::test_constants)
      ;
    series << add(v1.release());
  }    
  return series.release();
}
#endiv
