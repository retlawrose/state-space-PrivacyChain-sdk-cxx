// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/PrivacyChain-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
namespace tests::unit::transaction { class History; }
#endiv
#divert <hpp>
struct tests::unit::transaction::History : public cppunit::test::Fixture {
  auto test_constructor_default() -> void;
  auto test_deserialize() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import iab.privacychain.transaction.History
auto tests::unit::transaction::History::test_constructor_default() -> void {
#warning WRITETHIS auto tests::unit::transaction::History::test_constructor_default() -> void
  CPPUNIT_ASSERT(true);
}
auto tests::unit::transaction::History::test_deserialize() -> void {
#warning WRITETHIS auto tests::unit::transaction::History::test_deserialize() -> void
  CPPUNIT_ASSERT(true);
}
auto tests::unit::transaction::History::suite() -> cppunit::Test * {
  using namespace rigging::suite;
  auto series = Stream{"History"};
  series << []{
              auto con = Stream{"constructor"};
              con << call("default", &History::test_constructor_default)
                  << END;
              return move(con);
            }()
         << call("deserialize", &History::test_deserialize)
         << END;
  return finalize(series);
}
#endiv
