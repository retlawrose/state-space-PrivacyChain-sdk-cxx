# This is a GNU -*- Makefile -*- fragment that is included by Automake
# Copyright Verizon Media.
# Copyright 2019, Oath Inc.
# Licensed under the terms of the Apache-2.0 license.
# See the LICENSE file in https://github.com/yahoo/PrivacyChain-sdk-c++/blob/master/LICENSE for terms.

check_bin_unit = check/bin/unit
check_bin_unit_LDADD = \
  $(lib_libiab_privacychain_la) \
  $(lib_libwant_la) \
  -lrigging-bench-module \
  $(end)
# Reminder: autotools does not put $(AM_LDFLAGS) into check_bin_unit_LDFLAGS, like it does with CPPFLAGS and CXXFLAGS
check_bin_unit_LDFLAGS = $(CHECK_LDFLAGS_SET)
$(check_bin_unit_OBJECTS) : AM_CPPFLAGS+=$(CHECK_CPPFLAGS_SET)
$(check_bin_unit_OBJECTS) : AM_CXXFLAGS+=$(CHECK_CXXFLAGS_SET)
check_bin_unit_MODULES = $(call TF_SOURCEStoMODULES, $(check_bin_unit_SOURCES))
check_bin_unit_SOURCES = \
  obj/src/tests/unit/main.cpp \
  obj/src/tests/unit/namespace.cpp \
  obj/src/tests/unit/api.Fixture.cpp \
  obj/src/tests/unit/chaincode.Fixture.cpp \
  $(obj_src_tests_unit_constructor_SUBSOURCES) \
  obj/src/tests/unit/detail.Fixture.cpp \
  obj/src/tests/unit/error.Fixture.cpp \
  obj/src/tests/unit/error.Category.cpp \
  obj/src/tests/unit/function.Fixture.cpp \
  obj/src/tests/unit/history.Fixture.cpp \
  obj/src/tests/unit/iab.Fixture.cpp \
  obj/src/tests/unit/key.Fixture.cpp \
  obj/src/tests/unit/key.Generate.cpp \
  obj/src/tests/unit/privacychain.Fixture.cpp \
  obj/src/tests/unit/privacychain.Fixture.Exceptional.cpp \
  obj/src/tests/unit/record.Fixture.cpp \
  obj/src/tests/unit/schema.Fixture.cpp \
  obj/src/tests/unit/time.Fixture.cpp \
  obj/src/tests/unit/transaction.Fixture.cpp \
  obj/src/tests/unit/transaction.Identifier.cpp \
  obj/src/tests/unit/transaction.Record.cpp \
  obj/src/tests/unit/transaction.History.cpp \
  obj/src/tests/unit/want.Fixture.cpp \
  $(end)
#
include src/tests/unit/constructor/Makefrag.am
#
$(scold_cxxdir)/tests/unit/dependencies.mk: $(check_bin_unit_SOURCES)
$(check_bin_unit_SOURCES) : obj/src/%.cpp : src/%.xcpp
	$(TF_V_DIS) $(call TF_XCPP2CPP, $^)
	$(TF_V_DONE) test -e $@
$(scold_cxxdir)/tests/unit/dependencies.mk:
	$(TF_V_DEP) $(call TF_DEPENDENCIES, $^)
	$(TF_V_DONE) test -e $@
include $(scold_cxxdir)/tests/unit/dependencies.mk
clean-dependencies::
	rm -f $(scold_cxxdir)/tests/unit/dependencies.mk
